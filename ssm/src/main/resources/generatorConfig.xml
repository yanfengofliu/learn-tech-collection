<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
 <!-- <properties resource="./src/main/resources/jdbc.properties" /> -->
  <!-- 引入mysql-connector-java-5.1.6.jar位置  项目中已引入该jar,可以不配置该选项
  <classPathEntry location="D:/maven/repo/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6.jar" /> -->

  <context id="context1">
  <!-- 设置生成文件的编码 -->
  <property name="javaFileEncoding" value="UTF-8"/>
  <!-- 格式化java代码 -->
 <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/> 
 
 <!-- 格式化XML代码 -->
    <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter" />
    
    <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
    <property name="beginningDelimiter" value="`"/>
    <property name="endingDelimiter" value="`"/>
	<!-- 生成的pojo，将implements Serializable,为生成的Java模型类添加序列化接口-->    
    <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
    
    <!-- 为生成的Java模型创建一个toString方法 -->
    <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
    
    <!-- 生成 entity时，生成hashcode和equals方法
    <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />  -->  
    
   <!-- 是否去除自动生成的注释 true：是 ： false:否  -->
    <commentGenerator>
        <property name="suppressDate" value="true"/>
        <property name="suppressAllComments" value="true" />
    </commentGenerator>

	<!-- 数据库链接URL、用户名、密码 -->
    <jdbcConnection connectionURL="jdbc:mysql://localhost:3306/feng" driverClass="com.mysql.jdbc.Driver" password="123456" userId="root" />
    
    <!-- java类型处理器 
            用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
            注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型； 
    --> 
    <javaTypeResolver>
        <!-- 
            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
            false：默认,
                scale>0;length>18：使用BigDecimal;
                scale=0;length[10,18]：使用Long；
                scale=0;length[5,9]：使用Integer；
                scale=0;length<5：使用Short；
         -->  
        <property name="forceBigDecimals" value="false" />    
    </javaTypeResolver>  
<!-- java模型创建器，是必须要的元素
          负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
     -->   

    <javaModelGenerator targetPackage="org.ssm.dufy.entity" targetProject="ssm/src/main/java" />
    <sqlMapGenerator targetPackage="org.ssm.dufy.mapper" targetProject="ssm/src/main/java" />
    <javaClientGenerator targetPackage="org.ssm.dufy.dao" targetProject="ssm/src/main/java" type="XMLMAPPER" />
   
    <table  tableName="user_t" domainObjectName="User"  
    enableCountByExample="false" enableUpdateByExample="false"  
    enableDeleteByExample="false" enableSelectByExample="false"  
    selectByExampleQueryId="false">  
</table>  
  </context>
</generatorConfiguration>